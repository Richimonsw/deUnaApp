---
import iconoD1 from "../assets/icon-deuna.png";
const apiKey = import.meta.env.PUBLIC_OPENAI_API_KEY;
---

<div class="chat-container">
  <header class="chat-header">
    <button class="back-btn" onclick="window.history.back()">&#8592;</button>
    <div class="chat-title">
      <span>Chat IA</span>
      <small class="chat-status">Bot Listo</small>
    </div>
    <button class="info-btn"></button>
  </header>

  <div class="chat-box" id="chat-box">
    <div class="date-label">Hoy</div>
    <div class="message received" id="bot-message">
      <img src={iconoD1.src} alt="icono-deuna" class="avatar" />
      <div class="message-content typing">...</div>
    </div>
  </div>

  <div class="chat-input">
    <input
      type="text"
      id="message-input"
      placeholder="Escribe tu mensaje aqu√≠..."
      autocomplete="off"
    />
    <button id="send-btn">&#10148;</button>
  </div>
</div>

<style>
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
  }

  body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: #f5f5f5;
  }

  .chat-container {
    width: 100%;
    max-width: 450px;
    height: 100vh;
    display: flex;
    flex-direction: column;
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  .chat-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 15px;
    background: #3d2555;
    color: white;
  }

  .chat-title {
    display: flex;
    flex-direction: column;
    text-align: center;
  }

  .chat-status {
    font-size: 12px;
    color: #d1d1d1;
  }

  .chat-box {
    flex-grow: 1;
    padding: 15px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    background: #f8f8f8;
  }

  .date-label {
    align-self: center;
    background: #e5e5ea;
    padding: 5px 10px;
    border-radius: 10px;
    font-size: 12px;
    margin-bottom: 10px;
  }

  .message {
    display: flex;
    align-items: flex-end;
    margin: 10px 0;
    animation: fadeIn 0.3s ease-in-out;
  }

  .message.received {
    align-self: flex-start;
  }

  .message.sent {
    align-self: flex-end;
  }

  .avatar {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    margin-right: 10px;
  }

  .message-content {
    background: #e5e5ea;
    padding: 10px;
    border-radius: 15px;
    max-width: 75%;
    font-size: 14px;
    position: relative;
  }

  .sent .message-content {
    background: #3d2555;
    color: white;
  }

  .typing {
    font-style: italic;
    color: #7d7d7d;
    animation: blink 1s infinite alternate;
  }

  @keyframes blink {
    from {
      opacity: 0.5;
    }
    to {
      opacity: 1;
    }
  }

  .chat-input {
    display: flex;
    padding: 10px;
    background: #fff;
    border-top: 1px solid #ddd;
  }

  .chat-input input {
    flex: 1;
    padding: 10px;
    border: none;
    border-radius: 20px;
    outline: none;
    background: #f0f0f0;
  }

  .chat-input button {
    background: #3d2555;
    border: none;
    color: white;
    padding: 10px;
    border-radius: 50%;
    margin-left: 10px;
    cursor: pointer;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  const apiKey = import.meta.env.PUBLIC_OPENAI_API_KEY;

  const systemPrompt = `
Eres un Asistente Financiero experto de la empresa Deuna. Tu misi√≥n es guiar a los usuarios para que mejoren su educaci√≥n financiera y adopten h√°bitos de ahorro y planificaci√≥n econ√≥mica efectivos. Adicionalmente, debes actuar de forma cercana y profesional para ayudarles a comprender mejor su situaci√≥n financiera y ofrecerles planes personalizados, consejos pr√°cticos y herramientas para alcanzar sus metas econ√≥micas.

Tu rol y lineamientos clave:
1. Profesionalismo y empat√≠a: Mant√©n siempre un tono respetuoso, claro y emp√°tico. Eres un experto en finanzas personales que ayuda a los usuarios a ahorrar y llevar un mejor control de sus ingresos y gastos.
2. Educaci√≥n financiera: Explica conceptos financieros ‚Äîcomo presupuesto, gastos fijos, gastos variables, tasa de inter√©s, inversi√≥n, deudas, etc.‚Äî de forma sencilla y did√°ctica. Ajusta la complejidad seg√∫n el nivel de entendimiento del usuario.
3. Plan de ahorro personalizado: Dise√±a planes de ahorro realistas y adaptados a la situaci√≥n de cada persona. Calcula objetivos, plazos y montos de aportaci√≥n, brindando sugerencias sobre c√≥mo optimizar los gastos y priorizar metas.
4. Optimizaci√≥n de recursos: Orienta sobre la mejor manera de administrar el dinero, reducir gastos innecesarios y maximizar el rendimiento de sus ingresos, incluyendo recomendaciones de herramientas o m√©todos de seguimiento de gastos e ingresos.
5. Resoluci√≥n de dudas financieras: Responde de manera precisa y con fundamentos a preguntas sobre finanzas personales, inversi√≥n, pr√©stamos, cr√©ditos, deudas, seguros, planes de retiro, entre otros.
6. Orientado a la acci√≥n: Ofrece pasos concretos que el usuario pueda seguir para implementar mejoras financieras. Puedes incluir listas de verificaci√≥n, recomendaciones de ahorro, ejemplos de presupuestos y comparaciones de productos financieros.
7. Enfoque en la misi√≥n de Deuna: Recuerda que eres parte de la empresa Deuna, por lo que transmitir confianza y cercan√≠a es fundamental. Eres un apoyo confiable que busca ayudar en la salud financiera de los usuarios.

Objetivo:
Brindar orientaci√≥n experta para que cada usuario pueda llevar una vida econ√≥mica estable, con mejores h√°bitos financieros y claridad en la toma de decisiones financieras a lo largo del tiempo.
`;

  function parseMarkdown(text) {
    return text
      .replace(/\*\*(.*?)\*\*/g, "<b>$1</b>") // Negritas
      .replace(/\*(.*?)\*/g, "<i>$1</i>") // Cursivas
      .replace(/`(.*?)`/g, "<code>$1</code>") // C√≥digo
      .replace(/\n/g, "<br>"); // Saltos de l√≠nea
  }

  async function sendMessageToAI(message) {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`,
      },
      body: JSON.stringify({
        model: "gpt-3.5-turbo",
        messages: [
          { role: "system", content: systemPrompt },
          { role: "user", content: message },
        ],
      }),
    });

    const data = await response.json();
    return parseMarkdown(data.choices[0].message.content);
  }

  document.addEventListener("DOMContentLoaded", function () {
    setTimeout(() => {
      const botMessage = document.getElementById("bot-message");
      botMessage.querySelector(".message-content").classList.remove("typing");
      botMessage.querySelector(".message-content").innerHTML =
        "Hola! Soy tu asistente financiero de Deuna. üí∞<br>¬øC√≥mo puedo ayudarte hoy?";
    }, 1000);
  });

  document
    .getElementById("send-btn")
    .addEventListener("click", async function () {
      const messageInput = document.getElementById("message-input");
      const messageText = messageInput.value.trim();
      if (messageText !== "") {
        const chatBox = document.getElementById("chat-box");

        const userMessage = document.createElement("div");
        userMessage.classList.add("message", "sent");
        Object.assign(userMessage.style, {
          background: "#3d2555",
          color: "white",
          padding: "10px",
          borderRadius: "15px",
          fontSize: "14px",
          maxWidth: "75%",
          marginLeft: "83px",
        });
        userMessage.innerHTML = `<div class='message-content'><p>${messageText}</p></div>`;
        chatBox.appendChild(userMessage);
        chatBox.scrollTop = chatBox.scrollHeight;
        messageInput.value = "";

        const botMessage = document.createElement("div");
        botMessage.classList.add("message", "received");
        Object.assign(botMessage.style, {
          background: "#e5e5ea",
          borderRadius: "15px",
          padding: "10px",
          maxWidth: "75%",
          fontSize: "14px",
          position: "relative",
          color: "#333",
        });

        const botContent = document.createElement("div");
        botContent.classList.add("message-content", "typing");
        botContent.innerHTML = "‚åõ...";

        botMessage.appendChild(botContent);
        chatBox.appendChild(botMessage);
        chatBox.scrollTop = chatBox.scrollHeight;

        try {
          const botResponse = await sendMessageToAI(messageText);
          botContent.classList.remove("typing");
          botContent.innerHTML = `<p>${botResponse}</p>`;
        } catch (error) {
          botContent.innerHTML = `<p>‚ùå Error al procesar tu mensaje.</p>`;
        }

        chatBox.scrollTop = chatBox.scrollHeight;
      }
    });
</script>
